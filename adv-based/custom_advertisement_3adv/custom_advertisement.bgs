# ================================================================
# BGScript project: custom advertisement data modify for
# Maximum data in adv_data
# By: Sergio Aguilar Romero 
# ----------------------------------------------------------------
# CHANGELOG:
#   2015-12-01 First release
# ================================================================

dim adv_data(31)    # custom advertisement data Max adv_data 31 bytes 
dim sr_data(20)     # custom scan response data (friendly name for active scanning) not used
dim mac_addr(6)     # Bluetooth MAC address container

event system_boot(major, minor, patch, build, ll_version, protocol, hw)
    # -------------------------------
    # build custom advertisement data
    # -------------------------------
    
    # flags for discoverable/connectable
    adv_data(0:1) = $02 # ad field length = 2 bytes
    adv_data(1:1) = gap_ad_type_flags   # ad field type = 0x01 (Flags)
    adv_data(2:1) = $06 # flags = 0x06, connectable/undirected

    # tx power field advertisement, iOS apps may need this
    adv_data(3:1) = $02 # ad field length = 2 bytes
    adv_data(4:1) = gap_ad_type_txpower    # ad field type = 0x0A (TX Power)
    adv_data(5:1) = $03 # TX power in dBm
     
    # custom manufacturer
    adv_data(6:1) = $06 # ad field length = 5 bytes (arbitrary, maybe more or less but minimum 3)
    adv_data(7:1) = $ff # ad field type = 0xFF (Manufacturer Specific Data)
    adv_data(8:1) = $ff # unknown/prototype Company Identifier Code - octet 2 
    adv_data(9:1) = $ff # unknown/prototype Company Identifier Code - octet 1 
    adv_data(10:1) = $b1 # custom data byte #1 (can be anything)
    adv_data(11:1) = $b2 # custom data byte #2 (can be anything)
    adv_data(12:1) = $b3 # custom data byte #3 (can be anything)

    # custom Data in adv_data ADV_NONCONN_IND
    adv_data(13:1) = $41 # A
    adv_data(14:1) = $44 # D
    adv_data(15:1) = $56 # V 
    adv_data(16:1) = $5f # -
    adv_data(17:1) = $4e # N
    adv_data(18:1) = $4f # O
    adv_data(19:1) = $4e # N
    adv_data(20:1) = $43 # C
    adv_data(21:1) = $4f # O
    adv_data(22:1) = $4e # N 
    adv_data(23:1) = $4e # N
    adv_data(24:1) = $5f # -
    adv_data(25:1) = $49 # I
    adv_data(26:1) = $4e # N	
    adv_data(27:1) = $44 # D
    adv_data(28:1) = $46 # F
    adv_data(29:1) = $41 # A 
    adv_data(30:1) = $52 # R
 
    # set advertisement interval to 1s-2s, use all advertisement channels
    call gap_set_adv_parameters(32, 32, 7)
    
    # set custom advertisement data
    call gap_set_adv_data(0, 31, adv_data(0:31))
    
     # put module into non-connectable/undirected event (with user-defined advertisement data)
    call gap_set_mode(gap_user_data, gap_non_connectable) 
end

event connection_disconnected(handle, result)
    # disconnected!
    
     # put module into non-connectable/undirected event (with user-defined advertisement data)
    call gap_set_mode(gap_user_data, gap_non_connectable)
end